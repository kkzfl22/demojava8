#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>BIT</code>.
#/
DATABASE.TYPE.BIT=-7,BIT,0,0,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>TINYINT</code>.
#/
DATABASE.TYPE.TINYINT=-6,INTEGER,0,0,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>SMALLINT</code>.
#/
#smallint数值范围：-32,768到32,767。
DATABASE.TYPE.SMALLINT=5,SMALLINT,0,5,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>INTEGER</code>.
#/
#int数值范围：-2,147,483,648到2,147,483,647。
DATABASE.TYPE.INTEGER=4,INTEGER,0,10,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>BIGINT</code>.
#/
DATABASE.TYPE.BIGINT=-5,NUMBER,0,0,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>FLOAT</code>.
#/
DATABASE.TYPE.FLOAT=UNION,6,FLOAT,0,38,-84,127,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>REAL</code>.
#/
DATABASE.TYPE.REAL=7,REAL,0,0,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>DOUBLE</code>.
#/
DATABASE.TYPE.DOUBLE=UNION,8,DOUBLE,0,38,-84,127,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>NUMERIC</code>.
#/
# The precision p can range from 1 to 38. The scale s can range from -84 to 127.
DATABASE.TYPE.NUMERIC=UNION,2,NUMERIC,0,38,-84,127,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>DECIMAL</code>.
#/
DATABASE.TYPE.DECIMAL=UNION,3,DECIMAL,0,38,-84,127,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>CHAR</code>.
#/
DATABASE.TYPE.CHAR=1,CHAR,1,2000,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>VARCHAR</code>.
#/
DATABASE.TYPE.VARCHAR=12,VARCHAR2,0,4000,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>LONGVARCHAR</code>.
#/
DATABASE.TYPE.LONGVARCHAR=-1,VARCHAR2,0,4000,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>DATE</code>.
#/
DATABASE.TYPE.DATE=91,DATE,0,0,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>TIME</code>.
#/
DATABASE.TYPE.TIME=92,TIMESTAMP,0,9,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>TIMESTAMP</code>.
#/
DATABASE.TYPE.TIMESTAMP=93,TIMESTAMP,0,9,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>BINARY</code>.
#/
DATABASE.TYPE.BINARY=-2,NOT,0,0,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>VARBINARY</code>.
#/
DATABASE.TYPE.VARBINARY=-3,NOT,0,0,NULL
#
# <P>The constant in the Java programming language, sometimes referred
# to as a type code, that identifies the generic SQL type
# <code>LONGVARBINARY</code>.
#/
DATABASE.TYPE.LONGVARBINARY=-4,VARCHAR2,0,0,NULL
#
# <P>The constant in the Java programming language
# that identifies the generic SQL value
# <code>NULL</code>.
#/
DATABASE.TYPE.NULL=0,NOT,0,0,NULL
#
# The constant in the Java programming language that indicates
# that the SQL type is database-specific and
# gets mapped to a Java object that can be accessed via
# the methods <code>getObject</code> and <code>setObject</code>.
#/
DATABASE.TYPE.OTHER=1111,NOT,0,0,NULL
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type
# <code>JAVA_OBJECT</code>.
# @since 1.2
#/
DATABASE.TYPE.JAVA_OBJECT=2000,NOT,0,0,NULL
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type
# <code>DISTINCT</code>.
# @since 1.2
#/
DATABASE.TYPE.DISTINCT=2001,NOT,0,0,NULL
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type
# <code>STRUCT</code>.
# @since 1.2
#/
DATABASE.TYPE.STRUCT=2002,NOT,0,0,NULL
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type
# <code>ARRAY</code>.
# @since 1.2
#/
DATABASE.TYPE.ARRAY=2003,NOT,0,0,NULL
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type
# <code>BLOB</code>.
# @since 1.2
#/
DATABASE.TYPE.BLOB=2004,BLOB,0,0,NULL
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type
# <code>CLOB</code>.
# @since 1.2
#/
DATABASE.TYPE.CLOB=2005,CLOB,0,0,NULL
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type
# <code>REF</code>.
# @since 1.2
#/
DATABASE.TYPE.REF=2006,REF,0,0,NULL
#
# The constant in the Java programming language, somtimes referred to
# as a type code, that identifies the generic SQL type <code>DATALINK</code>.
#
# @since 1.4
#/
DATABASE.TYPE.DATALINK=70,NOT,0,0,NULL
#
# The constant in the Java programming language, somtimes referred to
# as a type code, that identifies the generic SQL type <code>BOOLEAN</code>.
#
# @since 1.4
#/
DATABASE.TYPE.BOOLEAN=16,NUMBER(1),0,0,NULL
#//------------------------- JDBC 4.0 -----------------------------------
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type <code>ROWID</code>
#
# @since 1.6
#
#/
DATABASE.TYPE.ROWID=-8,NOT,0,0,NULL
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type <code>NCHAR</code>
#
# @since 1.6
#/
DATABASE.TYPE.NCHAR=-15,NCHAR,0,2000,NULL
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type <code>NVARCHAR</code>.
#
# @since 1.6
#/
DATABASE.TYPE.NVARCHAR=-9,NVARCHAR2,0,4000,NULL
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type <code>LONGNVARCHAR</code>.
#
# @since 1.6
#/
DATABASE.TYPE.LONGNVARCHAR=-16,VARCHAR2,0,4000,NULL
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type <code>NCLOB</code>.
#
# @since 1.6
#/
DATABASE.TYPE.NCLOB=2011,NCLOB,0,0,NULL
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type <code>XML</code>.
#
# @since 1.6
#/
DATABASE.TYPE.SQLXML=2009,NOT,0,0,NULL
#//--------------------------JDBC 4.2 -----------------------------
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type {@code REF CURSOR}.
#
# @since 1.8
#/
DATABASE.TYPE.REF_CURSOR=2012,NOT,0,0,NULL
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type
# {@code TIME WITH TIMEZONE}.
# TIMESTAMP(${precision}) WITH TIME ZONE
# @since 1.8
#/
DATABASE.TYPE.TIME_WITH_TIMEZONE=2013,TIMESTAMP,0,9,NULL
#
# The constant in the Java programming language, sometimes referred to
# as a type code, that identifies the generic SQL type
# {@code TIMESTAMP WITH TIMEZONE}.
# TIMESTAMP(${precision}) WITH TIME ZONE
# @since 1.8
#/
DATABASE.TYPE.TIMESTAMP_WITH_TIMEZONE=-101,TIMESTAMP,0,9,NULL
#
# oracle db locla type
# TIMESTAMP(${precision}) WITH LOCAL TIME ZONE
#/
DATABASE.TYPE.TIMESTAMP_WITH_LOCAL_TIMEZONE=-102,TIMESTAMP,0,9,NULL