当对象抛出异常之后，通常我们期望这个对象仍然保持在一种定义良好的可用状态之中，即使失败是发生在执行某个操作的过程中间。
一般而言，失败的方法调用应该使对象保持在被调用之前的状态。具有这种属性的方法被称为具有失败原子性

可以实现这种效果的途径：
1，设计一个不可变的对象
2，类似获得原子性的办法，调整计算处理过程的顺序 ，使得任何可能会失败的计算部分都在对象状态被修改之前发生
3，获得失败原子性的办法远远没有那么常，常用的做法是编写一段 恢复代码，由它来拦截操作过程中发生的失败，以及使对象回滚到操作开始之前的状态上
4，在对象的一份临时 拷贝上执行操作，当操作完成之后再用临时拷贝中的结果代替对象的内容。